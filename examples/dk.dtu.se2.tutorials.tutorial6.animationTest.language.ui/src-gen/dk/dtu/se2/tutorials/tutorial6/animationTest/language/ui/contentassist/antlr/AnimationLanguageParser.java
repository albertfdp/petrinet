/*
* generated by Xtext
*/
package dk.dtu.se2.tutorials.tutorial6.animationTest.language.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import dk.dtu.se2.tutorials.tutorial6.animationTest.language.services.AnimationLanguageGrammarAccess;

public class AnimationLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private AnimationLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected dk.dtu.se2.tutorials.tutorial6.animationTest.language.ui.contentassist.antlr.internal.InternalAnimationLanguageParser createParser() {
		dk.dtu.se2.tutorials.tutorial6.animationTest.language.ui.contentassist.antlr.internal.InternalAnimationLanguageParser result = new dk.dtu.se2.tutorials.tutorial6.animationTest.language.ui.contentassist.antlr.internal.InternalAnimationLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAnimationObjectAccess().getAlternatives(), "rule__AnimationObject__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getAnimationAccess().getGroup(), "rule__Animation__Group__0");
					put(grammarAccess.getAnimationAccess().getGroup_5(), "rule__Animation__Group_5__0");
					put(grammarAccess.getAnimationObject_ImplAccess().getGroup(), "rule__AnimationObject_Impl__Group__0");
					put(grammarAccess.getAnimationObject_ImplAccess().getGroup_3(), "rule__AnimationObject_Impl__Group_3__0");
					put(grammarAccess.getMoveAccess().getGroup(), "rule__Move__Group__0");
					put(grammarAccess.getMoveAccess().getGroup_3(), "rule__Move__Group_3__0");
					put(grammarAccess.getMoveAccess().getGroup_4(), "rule__Move__Group_4__0");
					put(grammarAccess.getShowAccess().getGroup(), "rule__Show__Group__0");
					put(grammarAccess.getShowAccess().getGroup_3(), "rule__Show__Group_3__0");
					put(grammarAccess.getHideAccess().getGroup(), "rule__Hide__Group__0");
					put(grammarAccess.getHideAccess().getGroup_3(), "rule__Hide__Group_3__0");
					put(grammarAccess.getStopAccess().getGroup(), "rule__Stop__Group__0");
					put(grammarAccess.getStopAccess().getGroup_3(), "rule__Stop__Group_3__0");
					put(grammarAccess.getAnimationAccess().getAnimationObjectsAssignment_4(), "rule__Animation__AnimationObjectsAssignment_4");
					put(grammarAccess.getAnimationAccess().getAnimationObjectsAssignment_5_1(), "rule__Animation__AnimationObjectsAssignment_5_1");
					put(grammarAccess.getAnimationObject_ImplAccess().getLabelAssignment_3_1(), "rule__AnimationObject_Impl__LabelAssignment_3_1");
					put(grammarAccess.getMoveAccess().getLabelAssignment_3_1(), "rule__Move__LabelAssignment_3_1");
					put(grammarAccess.getMoveAccess().getSpeedAssignment_4_1(), "rule__Move__SpeedAssignment_4_1");
					put(grammarAccess.getShowAccess().getLabelAssignment_3_1(), "rule__Show__LabelAssignment_3_1");
					put(grammarAccess.getHideAccess().getLabelAssignment_3_1(), "rule__Hide__LabelAssignment_3_1");
					put(grammarAccess.getStopAccess().getLabelAssignment_3_1(), "rule__Stop__LabelAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			dk.dtu.se2.tutorials.tutorial6.animationTest.language.ui.contentassist.antlr.internal.InternalAnimationLanguageParser typedParser = (dk.dtu.se2.tutorials.tutorial6.animationTest.language.ui.contentassist.antlr.internal.InternalAnimationLanguageParser) parser;
			typedParser.entryRuleAnimation();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AnimationLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AnimationLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
