/*
* generated by Xtext
*/
grammar InternalAnimationLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.dtu.se2.tutorials.tutorial6.animationTest.language.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.dtu.se2.tutorials.tutorial6.animationTest.language.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.dtu.se2.tutorials.tutorial6.animationTest.language.services.AnimationLanguageGrammarAccess;

}

@parser::members {

 	private AnimationLanguageGrammarAccess grammarAccess;
 	
    public InternalAnimationLanguageParser(TokenStream input, AnimationLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Animation";	
   	}
   	
   	@Override
   	protected AnimationLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAnimation
entryRuleAnimation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnimationRule()); }
	 iv_ruleAnimation=ruleAnimation 
	 { $current=$iv_ruleAnimation.current; } 
	 EOF 
;

// Rule Animation
ruleAnimation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Animation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnimationAccess().getAnimationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnimationAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='animationObjects' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnimationAccess().getAnimationObjectsKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnimationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnimationAccess().getAnimationObjectsAnimationObjectParserRuleCall_4_0()); 
	    }
		lv_animationObjects_4_0=ruleAnimationObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnimationRule());
	        }
       		add(
       			$current, 
       			"animationObjects",
        		lv_animationObjects_4_0, 
        		"AnimationObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAnimationAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnimationAccess().getAnimationObjectsAnimationObjectParserRuleCall_5_1_0()); 
	    }
		lv_animationObjects_6_0=ruleAnimationObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnimationRule());
	        }
       		add(
       			$current, 
       			"animationObjects",
        		lv_animationObjects_6_0, 
        		"AnimationObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAnimationAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAnimationAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleAnimationObject
entryRuleAnimationObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnimationObjectRule()); }
	 iv_ruleAnimationObject=ruleAnimationObject 
	 { $current=$iv_ruleAnimationObject.current; } 
	 EOF 
;

// Rule AnimationObject
ruleAnimationObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAnimationObjectAccess().getAnimationObject_ImplParserRuleCall_0()); 
    }
    this_AnimationObject_Impl_0=ruleAnimationObject_Impl
    { 
        $current = $this_AnimationObject_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnimationObjectAccess().getMoveParserRuleCall_1()); 
    }
    this_Move_1=ruleMove
    { 
        $current = $this_Move_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnimationObjectAccess().getShowParserRuleCall_2()); 
    }
    this_Show_2=ruleShow
    { 
        $current = $this_Show_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnimationObjectAccess().getHideParserRuleCall_3()); 
    }
    this_Hide_3=ruleHide
    { 
        $current = $this_Hide_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnimationObjectAccess().getStopParserRuleCall_4()); 
    }
    this_Stop_4=ruleStop
    { 
        $current = $this_Stop_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAnimationObject_Impl
entryRuleAnimationObject_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnimationObject_ImplRule()); }
	 iv_ruleAnimationObject_Impl=ruleAnimationObject_Impl 
	 { $current=$iv_ruleAnimationObject_Impl.current; } 
	 EOF 
;

// Rule AnimationObject_Impl
ruleAnimationObject_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnimationObject_ImplAccess().getAnimationObjectAction_0(),
            $current);
    }
)	otherlv_1='AnimationObject' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnimationObject_ImplAccess().getAnimationObjectKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnimationObject_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnimationObject_ImplAccess().getLabelKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnimationObject_ImplAccess().getLabelEStringParserRuleCall_3_1_0()); 
	    }
		lv_label_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnimationObject_ImplRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAnimationObject_ImplAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleMove
entryRuleMove returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoveRule()); }
	 iv_ruleMove=ruleMove 
	 { $current=$iv_ruleMove.current; } 
	 EOF 
;

// Rule Move
ruleMove returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMoveAccess().getMoveAction_0(),
            $current);
    }
)	otherlv_1='Move' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMoveAccess().getMoveKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMoveAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMoveAccess().getLabelKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMoveAccess().getLabelEStringParserRuleCall_3_1_0()); 
	    }
		lv_label_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoveRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='speed' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMoveAccess().getSpeedKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMoveAccess().getSpeedEStringParserRuleCall_4_1_0()); 
	    }
		lv_speed_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoveRule());
	        }
       		set(
       			$current, 
       			"speed",
        		lv_speed_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMoveAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleShow
entryRuleShow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShowRule()); }
	 iv_ruleShow=ruleShow 
	 { $current=$iv_ruleShow.current; } 
	 EOF 
;

// Rule Show
ruleShow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getShowAccess().getShowAction_0(),
            $current);
    }
)	otherlv_1='Show' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShowAccess().getShowKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShowAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getShowAccess().getLabelKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShowAccess().getLabelEStringParserRuleCall_3_1_0()); 
	    }
		lv_label_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShowRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getShowAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleHide
entryRuleHide returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHideRule()); }
	 iv_ruleHide=ruleHide 
	 { $current=$iv_ruleHide.current; } 
	 EOF 
;

// Rule Hide
ruleHide returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHideAccess().getHideAction_0(),
            $current);
    }
)	otherlv_1='Hide' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHideAccess().getHideKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHideAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHideAccess().getLabelKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHideAccess().getLabelEStringParserRuleCall_3_1_0()); 
	    }
		lv_label_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHideRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getHideAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleStop
entryRuleStop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStopRule()); }
	 iv_ruleStop=ruleStop 
	 { $current=$iv_ruleStop.current; } 
	 EOF 
;

// Rule Stop
ruleStop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStopAccess().getStopAction_0(),
            $current);
    }
)	otherlv_1='Stop' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStopAccess().getStopKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStopAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStopAccess().getLabelKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStopAccess().getLabelEStringParserRuleCall_3_1_0()); 
	    }
		lv_label_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStopRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStopAccess().getRightCurlyBracketKeyword_4());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


