/*
* generated by Xtext
*/
package dk.dtu.se2.tutorials.tutorial6.animationTest.language.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AnimationLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AnimationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Animation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnimationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAnimationObjectsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnimationObjectsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnimationObjectsAnimationObjectParserRuleCall_4_0 = (RuleCall)cAnimationObjectsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnimationObjectsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAnimationObjectsAnimationObjectParserRuleCall_5_1_0 = (RuleCall)cAnimationObjectsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Animation:
		//	"Animation" "{" "animationObjects" "{" animationObjects+=AnimationObject ("," animationObjects+=AnimationObject)* "}"
		//	"}";
		public ParserRule getRule() { return rule; }

		//"Animation" "{" "animationObjects" "{" animationObjects+=AnimationObject ("," animationObjects+=AnimationObject)* "}"
		//"}"
		public Group getGroup() { return cGroup; }

		//"Animation"
		public Keyword getAnimationKeyword_0() { return cAnimationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"animationObjects"
		public Keyword getAnimationObjectsKeyword_2() { return cAnimationObjectsKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//animationObjects+=AnimationObject
		public Assignment getAnimationObjectsAssignment_4() { return cAnimationObjectsAssignment_4; }

		//AnimationObject
		public RuleCall getAnimationObjectsAnimationObjectParserRuleCall_4_0() { return cAnimationObjectsAnimationObjectParserRuleCall_4_0; }

		//("," animationObjects+=AnimationObject)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//animationObjects+=AnimationObject
		public Assignment getAnimationObjectsAssignment_5_1() { return cAnimationObjectsAssignment_5_1; }

		//AnimationObject
		public RuleCall getAnimationObjectsAnimationObjectParserRuleCall_5_1_0() { return cAnimationObjectsAnimationObjectParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class AnimationObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnimationObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnimationObject_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMoveParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cShowParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cHideParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStopParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//AnimationObject:
		//	AnimationObject_Impl | Move | Show | Hide | Stop;
		public ParserRule getRule() { return rule; }

		//AnimationObject_Impl | Move | Show | Hide | Stop
		public Alternatives getAlternatives() { return cAlternatives; }

		//AnimationObject_Impl
		public RuleCall getAnimationObject_ImplParserRuleCall_0() { return cAnimationObject_ImplParserRuleCall_0; }

		//Move
		public RuleCall getMoveParserRuleCall_1() { return cMoveParserRuleCall_1; }

		//Show
		public RuleCall getShowParserRuleCall_2() { return cShowParserRuleCall_2; }

		//Hide
		public RuleCall getHideParserRuleCall_3() { return cHideParserRuleCall_3; }

		//Stop
		public RuleCall getStopParserRuleCall_4() { return cStopParserRuleCall_4; }
	}

	public class AnimationObject_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnimationObject_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnimationObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnimationObjectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLabelAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_3_1_0 = (RuleCall)cLabelAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AnimationObject_Impl returns AnimationObject:
		//	{AnimationObject} "AnimationObject" "{" ("label" label=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{AnimationObject} "AnimationObject" "{" ("label" label=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{AnimationObject}
		public Action getAnimationObjectAction_0() { return cAnimationObjectAction_0; }

		//"AnimationObject"
		public Keyword getAnimationObjectKeyword_1() { return cAnimationObjectKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("label" label=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"label"
		public Keyword getLabelKeyword_3_0() { return cLabelKeyword_3_0; }

		//label=EString
		public Assignment getLabelAssignment_3_1() { return cLabelAssignment_3_1; }

		//EString
		public RuleCall getLabelEStringParserRuleCall_3_1_0() { return cLabelEStringParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class MoveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Move");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMoveAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMoveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLabelAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_3_1_0 = (RuleCall)cLabelAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSpeedKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSpeedAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSpeedEStringParserRuleCall_4_1_0 = (RuleCall)cSpeedAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Move:
		//	{Move} "Move" "{" ("label" label=EString)? ("speed" speed=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{Move} "Move" "{" ("label" label=EString)? ("speed" speed=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{Move}
		public Action getMoveAction_0() { return cMoveAction_0; }

		//"Move"
		public Keyword getMoveKeyword_1() { return cMoveKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("label" label=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"label"
		public Keyword getLabelKeyword_3_0() { return cLabelKeyword_3_0; }

		//label=EString
		public Assignment getLabelAssignment_3_1() { return cLabelAssignment_3_1; }

		//EString
		public RuleCall getLabelEStringParserRuleCall_3_1_0() { return cLabelEStringParserRuleCall_3_1_0; }

		//("speed" speed=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"speed"
		public Keyword getSpeedKeyword_4_0() { return cSpeedKeyword_4_0; }

		//speed=EString
		public Assignment getSpeedAssignment_4_1() { return cSpeedAssignment_4_1; }

		//EString
		public RuleCall getSpeedEStringParserRuleCall_4_1_0() { return cSpeedEStringParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ShowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Show");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cShowAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cShowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLabelAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_3_1_0 = (RuleCall)cLabelAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Show:
		//	{Show} "Show" "{" ("label" label=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{Show} "Show" "{" ("label" label=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{Show}
		public Action getShowAction_0() { return cShowAction_0; }

		//"Show"
		public Keyword getShowKeyword_1() { return cShowKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("label" label=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"label"
		public Keyword getLabelKeyword_3_0() { return cLabelKeyword_3_0; }

		//label=EString
		public Assignment getLabelAssignment_3_1() { return cLabelAssignment_3_1; }

		//EString
		public RuleCall getLabelEStringParserRuleCall_3_1_0() { return cLabelEStringParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class HideElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Hide");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHideAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHideKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLabelAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_3_1_0 = (RuleCall)cLabelAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Hide:
		//	{Hide} "Hide" "{" ("label" label=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{Hide} "Hide" "{" ("label" label=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{Hide}
		public Action getHideAction_0() { return cHideAction_0; }

		//"Hide"
		public Keyword getHideKeyword_1() { return cHideKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("label" label=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"label"
		public Keyword getLabelKeyword_3_0() { return cLabelKeyword_3_0; }

		//label=EString
		public Assignment getLabelAssignment_3_1() { return cLabelAssignment_3_1; }

		//EString
		public RuleCall getLabelEStringParserRuleCall_3_1_0() { return cLabelEStringParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class StopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStopAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLabelAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_3_1_0 = (RuleCall)cLabelAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Stop:
		//	{Stop} "Stop" "{" ("label" label=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{Stop} "Stop" "{" ("label" label=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{Stop}
		public Action getStopAction_0() { return cStopAction_0; }

		//"Stop"
		public Keyword getStopKeyword_1() { return cStopKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("label" label=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"label"
		public Keyword getLabelKeyword_3_0() { return cLabelKeyword_3_0; }

		//label=EString
		public Assignment getLabelAssignment_3_1() { return cLabelAssignment_3_1; }

		//EString
		public RuleCall getLabelEStringParserRuleCall_3_1_0() { return cLabelEStringParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private AnimationElements pAnimation;
	private AnimationObjectElements pAnimationObject;
	private AnimationObject_ImplElements pAnimationObject_Impl;
	private EStringElements pEString;
	private MoveElements pMove;
	private ShowElements pShow;
	private HideElements pHide;
	private StopElements pStop;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public AnimationLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("dk.dtu.se2.tutorials.tutorial6.animationTest.language.AnimationLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Animation:
	//	"Animation" "{" "animationObjects" "{" animationObjects+=AnimationObject ("," animationObjects+=AnimationObject)* "}"
	//	"}";
	public AnimationElements getAnimationAccess() {
		return (pAnimation != null) ? pAnimation : (pAnimation = new AnimationElements());
	}
	
	public ParserRule getAnimationRule() {
		return getAnimationAccess().getRule();
	}

	//AnimationObject:
	//	AnimationObject_Impl | Move | Show | Hide | Stop;
	public AnimationObjectElements getAnimationObjectAccess() {
		return (pAnimationObject != null) ? pAnimationObject : (pAnimationObject = new AnimationObjectElements());
	}
	
	public ParserRule getAnimationObjectRule() {
		return getAnimationObjectAccess().getRule();
	}

	//AnimationObject_Impl returns AnimationObject:
	//	{AnimationObject} "AnimationObject" "{" ("label" label=EString)? "}";
	public AnimationObject_ImplElements getAnimationObject_ImplAccess() {
		return (pAnimationObject_Impl != null) ? pAnimationObject_Impl : (pAnimationObject_Impl = new AnimationObject_ImplElements());
	}
	
	public ParserRule getAnimationObject_ImplRule() {
		return getAnimationObject_ImplAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//Move:
	//	{Move} "Move" "{" ("label" label=EString)? ("speed" speed=EString)? "}";
	public MoveElements getMoveAccess() {
		return (pMove != null) ? pMove : (pMove = new MoveElements());
	}
	
	public ParserRule getMoveRule() {
		return getMoveAccess().getRule();
	}

	//Show:
	//	{Show} "Show" "{" ("label" label=EString)? "}";
	public ShowElements getShowAccess() {
		return (pShow != null) ? pShow : (pShow = new ShowElements());
	}
	
	public ParserRule getShowRule() {
		return getShowAccess().getRule();
	}

	//Hide:
	//	{Hide} "Hide" "{" ("label" label=EString)? "}";
	public HideElements getHideAccess() {
		return (pHide != null) ? pHide : (pHide = new HideElements());
	}
	
	public ParserRule getHideRule() {
		return getHideAccess().getRule();
	}

	//Stop:
	//	{Stop} "Stop" "{" ("label" label=EString)? "}";
	public StopElements getStopAccess() {
		return (pStop != null) ? pStop : (pStop = new StopElements());
	}
	
	public ParserRule getStopRule() {
		return getStopAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
